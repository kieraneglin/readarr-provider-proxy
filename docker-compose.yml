services:
  postgres:
    image: 'postgres:16.4-alpine'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  readarr-provider-proxy-typescript:
    build:
      context: .
      args:
        NODE_ENV: development
    volumes:
      - '.:/app'
    command: npm run watch

  readarr-provider-proxy:
    build:
      context: .
      args:
        NODE_ENV: development
    depends_on:
      - postgres
      - readarr-provider-proxy-typescript
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - '.:/app'
    ports:
      - 8080:8080
    command: ./docker-run.sh

volumes:
  postgres:
